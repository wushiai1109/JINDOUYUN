package com.jindouyun.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class JindouyunBrandExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public JindouyunBrandExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public JindouyunBrandExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public JindouyunBrandExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        JindouyunBrandExample example = new JindouyunBrandExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public JindouyunBrandExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public JindouyunBrandExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAdderssIdIsNull() {
            addCriterion("adderss_id is null");
            return (Criteria) this;
        }

        public Criteria andAdderssIdIsNotNull() {
            addCriterion("adderss_id is not null");
            return (Criteria) this;
        }

        public Criteria andAdderssIdEqualTo(Integer value) {
            addCriterion("adderss_id =", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdNotEqualTo(Integer value) {
            addCriterion("adderss_id <>", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdGreaterThan(Integer value) {
            addCriterion("adderss_id >", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("adderss_id >=", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdLessThan(Integer value) {
            addCriterion("adderss_id <", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdLessThanOrEqualTo(Integer value) {
            addCriterion("adderss_id <=", value, "adderssId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAdderssIdLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("adderss_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdderssIdIn(List<Integer> values) {
            addCriterion("adderss_id in", values, "adderssId");
            return (Criteria) this;
        }

        public Criteria andAdderssIdNotIn(List<Integer> values) {
            addCriterion("adderss_id not in", values, "adderssId");
            return (Criteria) this;
        }

        public Criteria andAdderssIdBetween(Integer value1, Integer value2) {
            addCriterion("adderss_id between", value1, value2, "adderssId");
            return (Criteria) this;
        }

        public Criteria andAdderssIdNotBetween(Integer value1, Integer value2) {
            addCriterion("adderss_id not between", value1, value2, "adderssId");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andDescIsNull() {
            addCriterion("`desc` is null");
            return (Criteria) this;
        }

        public Criteria andDescIsNotNull() {
            addCriterion("`desc` is not null");
            return (Criteria) this;
        }

        public Criteria andDescEqualTo(String value) {
            addCriterion("`desc` =", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescNotEqualTo(String value) {
            addCriterion("`desc` <>", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThan(String value) {
            addCriterion("`desc` >", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescGreaterThanOrEqualTo(String value) {
            addCriterion("`desc` >=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThan(String value) {
            addCriterion("`desc` <", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLessThanOrEqualTo(String value) {
            addCriterion("`desc` <=", value, "desc");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDescLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`desc` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDescLike(String value) {
            addCriterion("`desc` like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotLike(String value) {
            addCriterion("`desc` not like", value, "desc");
            return (Criteria) this;
        }

        public Criteria andDescIn(List<String> values) {
            addCriterion("`desc` in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotIn(List<String> values) {
            addCriterion("`desc` not in", values, "desc");
            return (Criteria) this;
        }

        public Criteria andDescBetween(String value1, String value2) {
            addCriterion("`desc` between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andDescNotBetween(String value1, String value2) {
            addCriterion("`desc` not between", value1, value2, "desc");
            return (Criteria) this;
        }

        public Criteria andPicUrlIsNull() {
            addCriterion("pic_url is null");
            return (Criteria) this;
        }

        public Criteria andPicUrlIsNotNull() {
            addCriterion("pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andPicUrlEqualTo(String value) {
            addCriterion("pic_url =", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlNotEqualTo(String value) {
            addCriterion("pic_url <>", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlGreaterThan(String value) {
            addCriterion("pic_url >", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlGreaterThanOrEqualTo(String value) {
            addCriterion("pic_url >=", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLessThan(String value) {
            addCriterion("pic_url <", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLessThanOrEqualTo(String value) {
            addCriterion("pic_url <=", value, "picUrl");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andPicUrlLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("pic_url <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPicUrlLike(String value) {
            addCriterion("pic_url like", value, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotLike(String value) {
            addCriterion("pic_url not like", value, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlIn(List<String> values) {
            addCriterion("pic_url in", values, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotIn(List<String> values) {
            addCriterion("pic_url not in", values, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlBetween(String value1, String value2) {
            addCriterion("pic_url between", value1, value2, "picUrl");
            return (Criteria) this;
        }

        public Criteria andPicUrlNotBetween(String value1, String value2) {
            addCriterion("pic_url not between", value1, value2, "picUrl");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("start_time is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("start_time is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(LocalDateTime value) {
            addCriterion("start_time =", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(LocalDateTime value) {
            addCriterion("start_time <>", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(LocalDateTime value) {
            addCriterion("start_time >", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("start_time >=", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(LocalDateTime value) {
            addCriterion("start_time <", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("start_time <=", value, "startTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStartTimeLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("start_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<LocalDateTime> values) {
            addCriterion("start_time in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<LocalDateTime> values) {
            addCriterion("start_time not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("start_time between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("start_time not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("end_time is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("end_time is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(LocalDateTime value) {
            addCriterion("end_time =", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(LocalDateTime value) {
            addCriterion("end_time <>", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(LocalDateTime value) {
            addCriterion("end_time >", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("end_time >=", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(LocalDateTime value) {
            addCriterion("end_time <", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("end_time <=", value, "endTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andEndTimeLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("end_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<LocalDateTime> values) {
            addCriterion("end_time in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<LocalDateTime> values) {
            addCriterion("end_time not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("end_time between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("end_time not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIsNull() {
            addCriterion("delivery_price is null");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIsNotNull() {
            addCriterion("delivery_price is not null");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceEqualTo(BigDecimal value) {
            addCriterion("delivery_price =", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotEqualTo(BigDecimal value) {
            addCriterion("delivery_price <>", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceGreaterThan(BigDecimal value) {
            addCriterion("delivery_price >", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("delivery_price >=", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceLessThan(BigDecimal value) {
            addCriterion("delivery_price <", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("delivery_price <=", value, "deliveryPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeliveryPriceLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("delivery_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceIn(List<BigDecimal> values) {
            addCriterion("delivery_price in", values, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotIn(List<BigDecimal> values) {
            addCriterion("delivery_price not in", values, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("delivery_price between", value1, value2, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andDeliveryPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("delivery_price not between", value1, value2, "deliveryPrice");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverIsNull() {
            addCriterion("total_
turnover is null");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverIsNotNull() {
            addCriterion("total_
turnover is not null");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverEqualTo(BigDecimal value) {
            addCriterion("total_
turnover =", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverNotEqualTo(BigDecimal value) {
            addCriterion("total_
turnover <>", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverGreaterThan(BigDecimal value) {
            addCriterion("total_
turnover >", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total_
turnover >=", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverLessThan(BigDecimal value) {
            addCriterion("total_
turnover <", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total_
turnover <=", value, "total
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotal
turnoverLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_
turnover <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverIn(List<BigDecimal> values) {
            addCriterion("total_
turnover in", values, "total
turnover");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverNotIn(List<BigDecimal> values) {
            addCriterion("total_
turnover not in", values, "total
turnover");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_
turnover between", value1, value2, "total
turnover");
            return (Criteria) this;
        }

        public Criteria andTotal
turnoverNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total_
turnover not between", value1, value2, "total
turnover");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverIsNull() {
            addCriterion("today_
turnover is null");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverIsNotNull() {
            addCriterion("today_
turnover is not null");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverEqualTo(BigDecimal value) {
            addCriterion("today_
turnover =", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverNotEqualTo(BigDecimal value) {
            addCriterion("today_
turnover <>", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverGreaterThan(BigDecimal value) {
            addCriterion("today_
turnover >", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("today_
turnover >=", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverLessThan(BigDecimal value) {
            addCriterion("today_
turnover <", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverLessThanOrEqualTo(BigDecimal value) {
            addCriterion("today_
turnover <=", value, "today
turnover");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andToday
turnoverLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_
turnover <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andToday
turnoverIn(List<BigDecimal> values) {
            addCriterion("today_
turnover in", values, "today
turnover");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverNotIn(List<BigDecimal> values) {
            addCriterion("today_
turnover not in", values, "today
turnover");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("today_
turnover between", value1, value2, "today
turnover");
            return (Criteria) this;
        }

        public Criteria andToday
turnoverNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("today_
turnover not between", value1, value2, "today
turnover");
            return (Criteria) this;
        }

        public Criteria andTotalOrderIsNull() {
            addCriterion("total_order is null");
            return (Criteria) this;
        }

        public Criteria andTotalOrderIsNotNull() {
            addCriterion("total_order is not null");
            return (Criteria) this;
        }

        public Criteria andTotalOrderEqualTo(Integer value) {
            addCriterion("total_order =", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderNotEqualTo(Integer value) {
            addCriterion("total_order <>", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderGreaterThan(Integer value) {
            addCriterion("total_order >", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_order >=", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderLessThan(Integer value) {
            addCriterion("total_order <", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderLessThanOrEqualTo(Integer value) {
            addCriterion("total_order <=", value, "totalOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTotalOrderLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("total_order <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTotalOrderIn(List<Integer> values) {
            addCriterion("total_order in", values, "totalOrder");
            return (Criteria) this;
        }

        public Criteria andTotalOrderNotIn(List<Integer> values) {
            addCriterion("total_order not in", values, "totalOrder");
            return (Criteria) this;
        }

        public Criteria andTotalOrderBetween(Integer value1, Integer value2) {
            addCriterion("total_order between", value1, value2, "totalOrder");
            return (Criteria) this;
        }

        public Criteria andTotalOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("total_order not between", value1, value2, "totalOrder");
            return (Criteria) this;
        }

        public Criteria andTodayOrderIsNull() {
            addCriterion("today_order is null");
            return (Criteria) this;
        }

        public Criteria andTodayOrderIsNotNull() {
            addCriterion("today_order is not null");
            return (Criteria) this;
        }

        public Criteria andTodayOrderEqualTo(Integer value) {
            addCriterion("today_order =", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderNotEqualTo(Integer value) {
            addCriterion("today_order <>", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderGreaterThan(Integer value) {
            addCriterion("today_order >", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("today_order >=", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderLessThan(Integer value) {
            addCriterion("today_order <", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderLessThanOrEqualTo(Integer value) {
            addCriterion("today_order <=", value, "todayOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andTodayOrderLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("today_order <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTodayOrderIn(List<Integer> values) {
            addCriterion("today_order in", values, "todayOrder");
            return (Criteria) this;
        }

        public Criteria andTodayOrderNotIn(List<Integer> values) {
            addCriterion("today_order not in", values, "todayOrder");
            return (Criteria) this;
        }

        public Criteria andTodayOrderBetween(Integer value1, Integer value2) {
            addCriterion("today_order between", value1, value2, "todayOrder");
            return (Criteria) this;
        }

        public Criteria andTodayOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("today_order not between", value1, value2, "todayOrder");
            return (Criteria) this;
        }

        public Criteria andFloorPriceIsNull() {
            addCriterion("floor_price is null");
            return (Criteria) this;
        }

        public Criteria andFloorPriceIsNotNull() {
            addCriterion("floor_price is not null");
            return (Criteria) this;
        }

        public Criteria andFloorPriceEqualTo(BigDecimal value) {
            addCriterion("floor_price =", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceNotEqualTo(BigDecimal value) {
            addCriterion("floor_price <>", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceGreaterThan(BigDecimal value) {
            addCriterion("floor_price >", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("floor_price >=", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceLessThan(BigDecimal value) {
            addCriterion("floor_price <", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("floor_price <=", value, "floorPrice");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andFloorPriceLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("floor_price <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFloorPriceIn(List<BigDecimal> values) {
            addCriterion("floor_price in", values, "floorPrice");
            return (Criteria) this;
        }

        public Criteria andFloorPriceNotIn(List<BigDecimal> values) {
            addCriterion("floor_price not in", values, "floorPrice");
            return (Criteria) this;
        }

        public Criteria andFloorPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("floor_price between", value1, value2, "floorPrice");
            return (Criteria) this;
        }

        public Criteria andFloorPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("floor_price not between", value1, value2, "floorPrice");
            return (Criteria) this;
        }

        public Criteria andSortOrderIsNull() {
            addCriterion("sort_order is null");
            return (Criteria) this;
        }

        public Criteria andSortOrderIsNotNull() {
            addCriterion("sort_order is not null");
            return (Criteria) this;
        }

        public Criteria andSortOrderEqualTo(Byte value) {
            addCriterion("sort_order =", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderNotEqualTo(Byte value) {
            addCriterion("sort_order <>", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderGreaterThan(Byte value) {
            addCriterion("sort_order >", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderGreaterThanOrEqualTo(Byte value) {
            addCriterion("sort_order >=", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderLessThan(Byte value) {
            addCriterion("sort_order <", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderLessThanOrEqualTo(Byte value) {
            addCriterion("sort_order <=", value, "sortOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andSortOrderLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("sort_order <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSortOrderIn(List<Byte> values) {
            addCriterion("sort_order in", values, "sortOrder");
            return (Criteria) this;
        }

        public Criteria andSortOrderNotIn(List<Byte> values) {
            addCriterion("sort_order not in", values, "sortOrder");
            return (Criteria) this;
        }

        public Criteria andSortOrderBetween(Byte value1, Byte value2) {
            addCriterion("sort_order between", value1, value2, "sortOrder");
            return (Criteria) this;
        }

        public Criteria andSortOrderNotBetween(Byte value1, Byte value2) {
            addCriterion("sort_order not between", value1, value2, "sortOrder");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Byte value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Byte value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Byte value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Byte value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Byte value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Byte> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Byte> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Byte value1, Byte value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(JindouyunBrand.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jindouyun_brand
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        private JindouyunBrandExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        protected Criteria(JindouyunBrandExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public JindouyunBrandExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(JindouyunBrand.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(JindouyunBrand.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table jindouyun_brand
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table jindouyun_brand
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table jindouyun_brand
         *
         * @mbg.generated
         */
        void example(com.jindouyun.db.domain.JindouyunBrandExample example);
    }
}