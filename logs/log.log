2020-08-12 13:19:55,886 ERROR [restartedMain] o.s.boot.SpringApplication [SpringApplication.java : 858] Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.jindouyun.all.Application]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'jindouyunExpressOrderService' for bean class [com.jindouyun.wx.service.JindouyunExpressOrderService] conflicts with existing, non-compatible bean definition of same name and class [com.jindouyun.db.service.JindouyunExpressOrderService]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:181)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:315)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:232)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:275)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:95)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:705)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:531)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.jindouyun.all.Application.main(Application.java:16)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'jindouyunExpressOrderService' for bean class [com.jindouyun.wx.service.JindouyunExpressOrderService] conflicts with existing, non-compatible bean definition of same name and class [com.jindouyun.db.service.JindouyunExpressOrderService]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:348)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:286)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:287)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:242)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:199)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:167)
	... 18 common frames omitted
2020-08-12 13:26:20,267 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:26:20,441 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:26:20,474 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:26:23,171 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:26:23,190 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:26:23,194 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:26:23.1813167(Timestamp), false(Boolean)
2020-08-12 13:26:23,198 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:26:23,209 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:26:23,211 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:26:23.2042564(Timestamp), false(Boolean)
2020-08-12 13:26:23,213 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:27:23,216 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:27:23,220 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:27:23,221 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:27:23.2163484(Timestamp), false(Boolean)
2020-08-12 13:27:23,222 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:27:23,223 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:27:23,223 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:27:23.2221588(Timestamp), false(Boolean)
2020-08-12 13:27:23,224 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:28:23,226 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:28:23,229 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:28:23,229 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:28:23.2261673(Timestamp), false(Boolean)
2020-08-12 13:28:23,230 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:28:23,231 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:28:23,232 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:28:23.2311874(Timestamp), false(Boolean)
2020-08-12 13:28:23,233 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:29:23,235 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:29:23,239 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:29:23,240 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:29:23.2354689(Timestamp), false(Boolean)
2020-08-12 13:29:23,241 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:29:23,242 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:29:23,243 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:29:23.2414528(Timestamp), false(Boolean)
2020-08-12 13:29:23,244 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:29:29,455 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] No primary or default constructor found for class java.time.LocalDateTime
java.lang.IllegalStateException: No primary or default constructor found for class java.time.LocalDateTime
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:219)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:139)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.NoSuchMethodException: java.time.LocalDateTime.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3350)
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2554)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:216)
	... 69 common frames omitted
2020-08-12 13:30:23,245 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:30:23,248 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:30:23,248 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:30:23.2457553(Timestamp), false(Boolean)
2020-08-12 13:30:23,249 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:30:23,251 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:30:23,251 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:30:23.2505427(Timestamp), false(Boolean)
2020-08-12 13:30:23,253 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:31:23,255 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:31:23,258 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:31:23,259 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:31:23.2554254(Timestamp), false(Boolean)
2020-08-12 13:31:23,260 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:31:23,261 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:31:23,262 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:31:23.2604038(Timestamp), false(Boolean)
2020-08-12 13:31:23,263 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:32:23,264 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:32:23,268 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:32:23,268 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:32:23.2652458(Timestamp), false(Boolean)
2020-08-12 13:32:23,269 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:32:23,270 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:32:23,270 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:32:23.269232(Timestamp), false(Boolean)
2020-08-12 13:32:23,271 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:33:23,272 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:33:23,275 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:33:23,276 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:33:23.2723571(Timestamp), false(Boolean)
2020-08-12 13:33:23,278 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:33:23,280 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:33:23,281 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:33:23.2793292(Timestamp), false(Boolean)
2020-08-12 13:33:23,282 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:34:23,284 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:34:23,287 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:34:23,288 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:34:23.2845273(Timestamp), false(Boolean)
2020-08-12 13:34:23,289 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:34:23,290 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:34:23,290 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:34:23.2892947(Timestamp), false(Boolean)
2020-08-12 13:34:23,291 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:35:23,293 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:35:23,297 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:35:23,297 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:35:23.2930134(Timestamp), false(Boolean)
2020-08-12 13:35:23,299 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:35:23,301 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:35:23,301 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:35:23.3009022(Timestamp), false(Boolean)
2020-08-12 13:35:23,302 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:36:23,305 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:36:23,307 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:36:23,308 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:36:23.3058017(Timestamp), false(Boolean)
2020-08-12 13:36:23,309 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:36:23,310 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:36:23,310 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:36:23.3097898(Timestamp), false(Boolean)
2020-08-12 13:36:23,311 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:37:23,313 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:37:23,316 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:37:23,316 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:37:23.3133852(Timestamp), false(Boolean)
2020-08-12 13:37:23,317 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:37:23,318 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:37:23,318 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:37:23.3171523(Timestamp), false(Boolean)
2020-08-12 13:37:23,319 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:37:49,064 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:37:49,171 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:37:49,206 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:37:51,538 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:37:51,556 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:37:51,560 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:37:51.5461844(Timestamp), false(Boolean)
2020-08-12 13:37:51,563 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:37:51,573 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:37:51,575 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:37:51.5691219(Timestamp), false(Boolean)
2020-08-12 13:37:51,577 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:38:13,808 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 13:38:13,809 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 13:38:13,818 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:38:13,938 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 13:38:13,979 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 13:38:13.9375619(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 13:38:13.9375619(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 13:38:13,987 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:38:13,989 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 13:38:13,995 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 13:38:13.9881721(Timestamp), 2020-08-12 13:38:13.9881721(Timestamp)
2020-08-12 13:38:14,005 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:38:14,005 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 13:38:14,007 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 13:38:14,009 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:38:31,307 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 36] Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value 'null'; nested exception is java.lang.RuntimeException: parser null to LocalDateTime fail
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value 'null'; nested exception is java.lang.RuntimeException: parser null to LocalDateTime fail
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.time.LocalDateTime] for value 'null'; nested exception is java.lang.RuntimeException: parser null to LocalDateTime fail
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:129)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:124)
	... 67 common frames omitted
Caused by: java.lang.RuntimeException: parser null to LocalDateTime fail
	at com.jindouyun.common.handler.DateConverter.convert(DateConverter.java:64)
	at com.jindouyun.common.handler.DateConverter.convert(DateConverter.java:12)
	at org.springframework.core.convert.support.GenericConversionService$ConverterAdapter.convert(GenericConversionService.java:385)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 73 common frames omitted
2020-08-12 13:38:51,579 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:38:51,580 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:38:51,581 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:38:51.5799797(Timestamp), false(Boolean)
2020-08-12 13:38:51,582 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:38:51,583 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:38:51,584 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:38:51.5828361(Timestamp), false(Boolean)
2020-08-12 13:38:51,585 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:39:27,943 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:39:28,240 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:39:28,303 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:39:31,340 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:39:31,357 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:39:31,361 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:39:31.3484975(Timestamp), false(Boolean)
2020-08-12 13:39:31,363 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:39:31,373 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:39:31,375 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:39:31.3694411(Timestamp), false(Boolean)
2020-08-12 13:39:31,377 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:40:15,424 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 13:40:15,427 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 13:40:15,434 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:15,548 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 13:40:15,567 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 13:40:15.5452974(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 13:40:15.5452974(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 13:40:15,575 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:40:15,579 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 13:40:15,585 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 13:40:15.5772131(Timestamp), 2020-08-12 13:40:15.5772131(Timestamp)
2020-08-12 13:40:15,591 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:40:15,592 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 13:40:15,596 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 13:40:15,598 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:26,980 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:40:26,981 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:40:26,985 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:26,995 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:40:26,997 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:40:27,002 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:27,076 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:40:27,078 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:40:27,079 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:27,081 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:40:27,081 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:40:27,082 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:40:27,197 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:40:27,198 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:40:27,200 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:40:27,211 ERROR [http-nio-8080-exec-2] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] null
java.lang.NullPointerException: null
	at com.jindouyun.db.service.JindouyunOrderSplitService.querySelective(JindouyunOrderSplitService.java:74)
	at com.jindouyun.admin.service.AdminOrderService.select(AdminOrderService.java:296)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$a705f1c9.select(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$95b416a3.select(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.list(AdminOrderController.java:131)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$e70b16de.list(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$4d856498.list(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:40:31,380 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:40:31,381 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:40:31,382 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:40:31.3804108(Timestamp), false(Boolean)
2020-08-12 13:40:31,382 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:40:31,384 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:40:31,384 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:40:31.3833962(Timestamp), false(Boolean)
2020-08-12 13:40:31,385 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:41:31,388 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:41:31,392 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:41:31,393 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:41:31.3880466(Timestamp), false(Boolean)
2020-08-12 13:41:31,395 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:41:31,396 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:41:31,397 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:41:31.3950278(Timestamp), false(Boolean)
2020-08-12 13:41:31,397 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:42:31,399 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:42:31,403 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:42:31,403 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:42:31.3997137(Timestamp), false(Boolean)
2020-08-12 13:42:31,404 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:42:31,406 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:42:31,407 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:42:31.405457(Timestamp), false(Boolean)
2020-08-12 13:42:31,408 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:43:26,536 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:43:26,630 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:43:26,663 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:43:28,813 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:43:28,830 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:43:28,833 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:43:28.8222991(Timestamp), false(Boolean)
2020-08-12 13:43:28,835 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:43:28,846 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:43:28,848 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:43:28.8422452(Timestamp), false(Boolean)
2020-08-12 13:43:28,850 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:43:33,654 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 13:43:33,657 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 13:43:33,665 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:33,773 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 13:43:33,792 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 13:43:33.7725717(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 13:43:33.7725717(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 13:43:33,799 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:43:33,801 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 13:43:33,807 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 13:43:33.800497(Timestamp), 2020-08-12 13:43:33.800497(Timestamp)
2020-08-12 13:43:33,812 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:43:33,813 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 13:43:33,815 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 13:43:33,816 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,547 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:43:43,548 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:43:43,550 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,558 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:43:43,560 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:43:43,562 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,620 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:43:43,621 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:43:43,622 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,623 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:43:43,624 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:43:43,626 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,648 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:43:43,649 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:43:43,651 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:43:43,805 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id = ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:43:43,818 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:43:43,822 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,824 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id = ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:43:43,830 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:43:43,833 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:43:43,841 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] null
java.lang.NullPointerException: null
	at com.jindouyun.admin.service.AdminOrderService.select(AdminOrderService.java:305)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$f415ba9d.select(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$e2c3df77.select(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.list(AdminOrderController.java:131)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$d6ca98e5.list(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$3d44e69f.list(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:44:28,851 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:44:28,854 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:44:28,857 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:44:28.8515113(Timestamp), false(Boolean)
2020-08-12 13:44:28,859 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:44:28,860 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:44:28,861 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:44:28.8594892(Timestamp), false(Boolean)
2020-08-12 13:44:28,863 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:44:52,886 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:44:52,992 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:44:53,035 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:44:55,810 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:44:55,830 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:44:55,836 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:44:55.8210088(Timestamp), false(Boolean)
2020-08-12 13:44:55,838 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:44:55,849 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:44:55,852 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:44:55.8449451(Timestamp), false(Boolean)
2020-08-12 13:44:55,854 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:44:59,251 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 13:44:59,254 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 13:44:59,263 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:44:59,414 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 13:44:59,438 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 13:44:59.4115786(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 13:44:59.4125772(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 13:44:59,444 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:44:59,449 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 13:44:59,455 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 13:44:59.4469929(Timestamp), 2020-08-12 13:44:59.4469929(Timestamp)
2020-08-12 13:44:59,463 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:44:59,464 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 13:44:59,467 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 13:44:59,470 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,363 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:45:07,366 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:45:07,370 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,379 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:45:07,380 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:45:07,383 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,455 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:45:07,456 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:45:07,457 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,459 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:45:07,459 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:45:07,460 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,483 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:45:07,485 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:45:07,487 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:45:07,525 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id = ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:45:07,529 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:45:07,531 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,534 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id = ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:45:07,538 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:45:07,539 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:45:07,545 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] class java.util.HashMap$Values cannot be cast to class java.util.List (java.util.HashMap$Values and java.util.List are in module java.base of loader 'bootstrap')
java.lang.ClassCastException: class java.util.HashMap$Values cannot be cast to class java.util.List (java.util.HashMap$Values and java.util.List are in module java.base of loader 'bootstrap')
	at com.jindouyun.admin.service.AdminOrderService.select(AdminOrderService.java:327)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$d9b620cc.select(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$c86445a6.select(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.list(AdminOrderController.java:131)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$7798ab14.list(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$de12f8ce.list(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 13:45:55,858 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:45:55,859 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:45:55,860 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:45:55.8586517(Timestamp), false(Boolean)
2020-08-12 13:45:55,862 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:45:55,863 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:45:55,863 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:45:55.8624241(Timestamp), false(Boolean)
2020-08-12 13:45:55,864 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:46:55,867 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:46:55,871 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:46:55,871 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:46:55.8670586(Timestamp), false(Boolean)
2020-08-12 13:46:55,872 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:46:55,873 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:46:55,874 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:46:55.8730442(Timestamp), false(Boolean)
2020-08-12 13:46:55,875 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:47:55,877 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:47:55,882 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:47:55,882 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:47:55.8784164(Timestamp), false(Boolean)
2020-08-12 13:47:55,883 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:47:55,885 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:47:55,885 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:47:55.8843985(Timestamp), false(Boolean)
2020-08-12 13:47:55,886 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:48:55,887 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:48:55,890 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:48:55,890 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:48:55.8878056(Timestamp), false(Boolean)
2020-08-12 13:48:55,891 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:48:55,892 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:48:55,893 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:48:55.892578(Timestamp), false(Boolean)
2020-08-12 13:48:55,894 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:49:36,322 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 13:49:36,433 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:49:36,464 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 13:49:39,119 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:49:39,141 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:49:39,145 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:49:39.1297379(Timestamp), false(Boolean)
2020-08-12 13:49:39,148 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:49:39,160 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:49:39,162 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:49:39.1556699(Timestamp), false(Boolean)
2020-08-12 13:49:39,165 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:49:40,691 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 13:49:40,693 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 13:49:40,703 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:40,848 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 13:49:40,873 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 169.254.18.154(String), 2020-08-12 13:49:40.8450612(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 13:49:40.8450612(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 13:49:40,881 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:49:40,884 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 13:49:40,894 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 169.254.18.154(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 13:49:40.8839569(Timestamp), 2020-08-12 13:49:40.8839569(Timestamp)
2020-08-12 13:49:40,901 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 13:49:40,903 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 13:49:40,905 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 13:49:40,908 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:47,912 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:49:47,914 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:49:47,916 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:47,925 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:49:47,927 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:49:47,931 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:48,006 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:49:48,008 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:49:48,009 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:48,011 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:49:48,011 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:49:48,013 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:48,039 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:49:48,041 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:49:48,042 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:49:48,087 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id = ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:49:48,089 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:49:48,092 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:49:48,093 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id = ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:49:48,099 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:49:48,101 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,810 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:50:11,812 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:50:11,814 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,817 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:50:11,818 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:50:11,820 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,823 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:50:11,824 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:50:11,825 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,828 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:50:11,829 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:50:11,831 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,836 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:50:11,837 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:50:11,838 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:50:11,842 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id <> ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:50:11,844 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:50:11,846 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:50:11,847 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id <> ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:50:11,850 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:50:11,852 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 2
2020-08-12 13:50:39,168 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:50:39,169 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:50:39,169 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:50:39.1686746(Timestamp), false(Boolean)
2020-08-12 13:50:39,170 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:50:39,173 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:50:39,174 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:50:39.1725001(Timestamp), false(Boolean)
2020-08-12 13:50:39,175 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:51:39,176 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:51:39,180 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:51:39,180 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:51:39.1764863(Timestamp), false(Boolean)
2020-08-12 13:51:39,181 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:51:39,182 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:51:39,183 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:51:39.1823841(Timestamp), false(Boolean)
2020-08-12 13:51:39,185 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:52:39,187 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:52:39,190 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:52:39,191 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:52:39.1879647(Timestamp), false(Boolean)
2020-08-12 13:52:39,192 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:52:39,193 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:52:39,194 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:52:39.1929164(Timestamp), false(Boolean)
2020-08-12 13:52:39,194 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:53:39,197 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:53:39,200 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:53:39,200 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:53:39.1977341(Timestamp), false(Boolean)
2020-08-12 13:53:39,201 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:53:39,202 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:53:39,203 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:53:39.2024908(Timestamp), false(Boolean)
2020-08-12 13:53:39,204 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:53:47,286 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:53:47,287 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:53:47,289 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:47,291 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:53:47,291 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:53:47,293 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:47,295 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:53:47,296 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:53:47,297 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:47,299 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:53:47,300 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:53:47,302 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:47,304 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:53:47,305 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:53:47,307 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:53:47,311 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id <> ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:53:47,312 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:53:47,313 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:47,315 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id <> ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:53:47,316 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:53:47,317 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 2
2020-08-12 13:53:49,987 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:53:49,988 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:53:49,990 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:49,992 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:53:49,993 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:53:49,995 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:49,997 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 13:53:49,998 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 13:53:50,000 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:50,002 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 13:53:50,003 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 13:53:50,005 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:50,008 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 13:53:50,009 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 13:53:50,011 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 13:53:50,015 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id <> ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 13:53:50,016 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 13:53:50,017 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 13:53:50,018 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id <> ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 13:53:50,018 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 13:53:50,020 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 2
2020-08-12 13:54:39,205 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:54:39,206 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:54:39,208 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:54:39.2057501(Timestamp), false(Boolean)
2020-08-12 13:54:39,209 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:54:39,211 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:54:39,212 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:54:39.2103113(Timestamp), false(Boolean)
2020-08-12 13:54:39,213 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:55:39,214 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:55:39,216 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:55:39,217 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:55:39.2149216(Timestamp), false(Boolean)
2020-08-12 13:55:39,218 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:55:39,219 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:55:39,220 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:55:39.2199077(Timestamp), false(Boolean)
2020-08-12 13:55:39,221 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:56:39,224 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:56:39,227 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:56:39,227 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:56:39.2243967(Timestamp), false(Boolean)
2020-08-12 13:56:39,228 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:56:39,229 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:56:39,229 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:56:39.228379(Timestamp), false(Boolean)
2020-08-12 13:56:39,230 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:57:39,232 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:57:39,235 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:57:39,236 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:57:39.2325548(Timestamp), false(Boolean)
2020-08-12 13:57:39,237 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:57:39,238 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:57:39,239 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:57:39.2382997(Timestamp), false(Boolean)
2020-08-12 13:57:39,239 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:58:39,241 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:58:39,243 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:58:39,244 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:58:39.24182(Timestamp), false(Boolean)
2020-08-12 13:58:39,246 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:58:39,247 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:58:39,247 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:58:39.2467766(Timestamp), false(Boolean)
2020-08-12 13:58:39,249 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:59:39,250 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 13:59:39,252 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:59:39,253 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 13:59:39.2507339(Timestamp), false(Boolean)
2020-08-12 13:59:39,255 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 13:59:39,257 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 13:59:39,257 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 13:59:39.2567126(Timestamp), false(Boolean)
2020-08-12 13:59:39,258 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:00:39,259 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:00:39,261 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:00:39,262 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:00:39.2597744(Timestamp), false(Boolean)
2020-08-12 14:00:39,263 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:00:39,264 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:00:39,264 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:00:39.2635628(Timestamp), false(Boolean)
2020-08-12 14:00:39,265 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:01:39,267 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:01:39,269 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:01:39,270 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:01:39.2671308(Timestamp), false(Boolean)
2020-08-12 14:01:39,271 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:01:39,272 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:01:39,272 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:01:39.2711226(Timestamp), false(Boolean)
2020-08-12 14:01:39,273 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:02:39,275 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:02:39,278 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:02:39,279 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:02:39.2750934(Timestamp), false(Boolean)
2020-08-12 14:02:39,280 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:02:39,281 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:02:39,281 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:02:39.2800821(Timestamp), false(Boolean)
2020-08-12 14:02:39,282 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:03:39,283 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:03:39,285 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:03:39,286 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:03:39.2830475(Timestamp), false(Boolean)
2020-08-12 14:03:39,287 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:03:39,288 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:03:39,288 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:03:39.2870381(Timestamp), false(Boolean)
2020-08-12 14:03:39,289 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:04:39,291 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:04:39,294 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:04:39,294 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:04:39.2919339(Timestamp), false(Boolean)
2020-08-12 14:04:39,295 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:04:39,297 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:04:39,297 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:04:39.2969212(Timestamp), false(Boolean)
2020-08-12 14:04:39,298 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:05:39,300 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:05:39,303 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:05:39,303 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:05:39.3006121(Timestamp), false(Boolean)
2020-08-12 14:05:39,304 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:05:39,305 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:05:39,305 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:05:39.3045357(Timestamp), false(Boolean)
2020-08-12 14:05:39,306 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:06:39,308 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:06:39,310 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:06:39,311 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:06:39.3081229(Timestamp), false(Boolean)
2020-08-12 14:06:39,312 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:06:39,313 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:06:39,313 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:06:39.3121028(Timestamp), false(Boolean)
2020-08-12 14:06:39,314 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:07:39,316 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:07:39,318 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:07:39,319 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:07:39.3163352(Timestamp), false(Boolean)
2020-08-12 14:07:39,319 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:07:39,320 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:07:39,321 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:07:39.3203135(Timestamp), false(Boolean)
2020-08-12 14:07:39,321 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:08:39,322 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:08:39,324 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:08:39,325 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:08:39.3228657(Timestamp), false(Boolean)
2020-08-12 14:08:39,326 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:08:39,327 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:08:39,327 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:08:39.3268196(Timestamp), false(Boolean)
2020-08-12 14:08:39,328 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:09:39,331 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:09:39,333 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:09:39,334 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:09:39.3311364(Timestamp), false(Boolean)
2020-08-12 14:09:39,335 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:09:39,336 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:09:39,336 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:09:39.3351175(Timestamp), false(Boolean)
2020-08-12 14:09:39,337 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:10:39,339 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:10:39,341 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:10:39,342 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:10:39.3398324(Timestamp), false(Boolean)
2020-08-12 14:10:39,343 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:10:39,343 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:10:39,344 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:10:39.3438113(Timestamp), false(Boolean)
2020-08-12 14:10:39,344 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:10:50,464 ERROR [http-nio-8080-exec-9] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 43] Required Integer parameter 'adminId' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'adminId' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:202)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:113)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:11:39,346 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:11:39,348 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:11:39,348 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:11:39.3468422(Timestamp), false(Boolean)
2020-08-12 14:11:39,349 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:11:39,350 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:11:39,350 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:11:39.3508339(Timestamp), false(Boolean)
2020-08-12 14:11:39,351 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:12:39,354 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:12:39,356 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:12:39,356 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:12:39.3540883(Timestamp), false(Boolean)
2020-08-12 14:12:39,357 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:12:39,358 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:12:39,358 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:12:39.3579165(Timestamp), false(Boolean)
2020-08-12 14:12:39,359 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:12:56,523 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 43] Required Integer parameter 'adminId' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'adminId' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:202)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:113)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:13:39,361 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:13:39,363 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:13:39,363 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:13:39.3611585(Timestamp), false(Boolean)
2020-08-12 14:13:39,364 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:13:39,365 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:13:39,366 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:13:39.3659001(Timestamp), false(Boolean)
2020-08-12 14:13:39,366 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:14:03,396 ERROR [http-nio-8080-exec-5] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 43] Required Integer parameter 'adminId' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required Integer parameter 'adminId' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:202)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:113)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:14:39,368 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:14:39,370 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:14:39,371 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:14:39.3689034(Timestamp), false(Boolean)
2020-08-12 14:14:39,372 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:14:39,373 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:14:39,374 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:14:39.3736756(Timestamp), false(Boolean)
2020-08-12 14:14:39,374 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:15:39,376 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:15:39,378 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:15:39,379 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:15:39.3769698(Timestamp), false(Boolean)
2020-08-12 14:15:39,380 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:15:39,381 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:15:39,381 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:15:39.3809611(Timestamp), false(Boolean)
2020-08-12 14:15:39,382 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:16:39,385 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:16:39,387 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:16:39,388 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:16:39.3858789(Timestamp), false(Boolean)
2020-08-12 14:16:39,389 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:16:39,390 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:16:39,391 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:16:39.3898307(Timestamp), false(Boolean)
2020-08-12 14:16:39,392 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:17:39,395 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:17:39,397 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:17:39,397 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:17:39.3958841(Timestamp), false(Boolean)
2020-08-12 14:17:39,398 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:17:39,399 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:17:39,399 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:17:39.3998964(Timestamp), false(Boolean)
2020-08-12 14:17:39,400 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:18:01,672 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:18:01,673 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:18:01,674 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:18:01,675 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:18:01,676 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:18:01,677 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:18:01,678 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:18:01,679 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:18:01,681 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:18:01,682 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:18:01,682 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:18:01,683 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:18:39,403 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:18:39,404 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:18:39,405 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:18:39.4036002(Timestamp), false(Boolean)
2020-08-12 14:18:39,405 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:18:39,406 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:18:39,407 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:18:39.4063406(Timestamp), false(Boolean)
2020-08-12 14:18:39,407 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:19:33,630 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 14:19:33,733 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:19:33,764 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 14:19:36,644 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:19:36,669 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:19:36,676 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:19:36.6569613(Timestamp), false(Boolean)
2020-08-12 14:19:36,678 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:19:36,691 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:19:36,694 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:19:36.6858851(Timestamp), false(Boolean)
2020-08-12 14:19:36,696 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:19:40,126 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 14:19:40,130 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 14:19:40,143 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:19:40,301 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 14:19:40,326 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 14:19:40.2983396(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 14:19:40.2983396(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 14:19:40,334 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:19:40,340 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:19:40,353 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 14:19:40.3378998(Timestamp), 2020-08-12 14:19:40.3378998(Timestamp)
2020-08-12 14:19:40,359 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:19:40,361 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:19:40,363 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:19:40,365 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,289 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:20:02,291 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:20:02,292 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,302 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:20:02,304 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:20:02,306 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,349 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:20:02,350 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:20:02,352 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,353 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:20:02,354 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:20:02,355 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,377 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:20:02,378 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812015616(String), false(Boolean)
2020-08-12 14:20:02,385 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,387 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:20:02,389 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812015616(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:20:32.386495(Timestamp), null, null, null, 2020-08-12 14:20:02.386495(Timestamp), 2020-08-12 14:20:02.386495(Timestamp), null
2020-08-12 14:20:02,391 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:20:02,392 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:20:02,393 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:20:02,394 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:20:02,396 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:20:02,400 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812015616(String), false(Boolean)
2020-08-12 14:20:02,402 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:20:36,698 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:20:36,700 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:20:36,700 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:20:36.69855(Timestamp), false(Boolean)
2020-08-12 14:20:36,702 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:20:36,703 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:20:36,704 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:20:36.7023193(Timestamp), false(Boolean)
2020-08-12 14:20:36,705 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:21:36,706 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:21:36,713 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:21:36,714 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:21:36.7069205(Timestamp), false(Boolean)
2020-08-12 14:21:36,715 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:21:36,717 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:21:36,719 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:21:36.7168951(Timestamp), false(Boolean)
2020-08-12 14:21:36,721 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:22:36,724 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:22:36,728 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:22:36,728 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:22:36.7245961(Timestamp), false(Boolean)
2020-08-12 14:22:36,729 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:22:36,730 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:22:36,731 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:22:36.73058(Timestamp), false(Boolean)
2020-08-12 14:22:36,732 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:22:53,426 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:22:53,428 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:22:53,429 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,433 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:22:53,434 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:22:53,436 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,438 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:22:53,439 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:22:53,440 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,442 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:22:53,442 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:22:53,445 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,449 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:22:53,450 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812041791(String), false(Boolean)
2020-08-12 14:22:53,452 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,453 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:22:53,454 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812041791(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:23:23.4531485(Timestamp), null, null, null, 2020-08-12 14:22:53.4531485(Timestamp), 2020-08-12 14:22:53.4531485(Timestamp), null
2020-08-12 14:22:53,456 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:22:53,457 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:22:53,458 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:22:53,460 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:22:53,462 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:22:53,464 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812041791(String), false(Boolean)
2020-08-12 14:22:53,466 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:23:05,695 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:23:05,696 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:23:05,698 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,699 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:23:05,700 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:23:05,701 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,704 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:23:05,705 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:23:05,706 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,709 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:23:05,709 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:23:05,711 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,714 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:23:05,715 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812634892(String), false(Boolean)
2020-08-12 14:23:05,716 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,717 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:23:05,718 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812634892(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:23:35.7171198(Timestamp), null, null, null, 2020-08-12 14:23:05.7171198(Timestamp), 2020-08-12 14:23:05.7171198(Timestamp), null
2020-08-12 14:23:05,720 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:23:05,720 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:23:05,721 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:23:05,722 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:23:05,725 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:23:05,726 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812634892(String), false(Boolean)
2020-08-12 14:23:05,727 DEBUG [http-nio-8080-exec-7] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:23:36,734 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:23:36,735 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:23:36,735 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:23:36.7342283(Timestamp), false(Boolean)
2020-08-12 14:23:36,736 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:23:36,737 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:23:36,738 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:23:36.7371474(Timestamp), false(Boolean)
2020-08-12 14:23:36,739 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:24:36,740 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:24:36,742 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:24:36,743 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:24:36.7401295(Timestamp), false(Boolean)
2020-08-12 14:24:36,747 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:24:36,748 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:24:36,749 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:24:36.7471098(Timestamp), false(Boolean)
2020-08-12 14:24:36,750 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:25:05,558 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 14:25:05,659 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:25:05,693 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 14:25:08,163 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:25:08,189 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:25:08,194 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:25:08.1771435(Timestamp), false(Boolean)
2020-08-12 14:25:08,197 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:25:08,209 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:25:08,211 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:25:08.2040716(Timestamp), false(Boolean)
2020-08-12 14:25:08,214 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:25:21,630 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 14:25:21,634 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 14:25:21,646 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:21,756 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 14:25:21,774 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 14:25:21.7549334(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 14:25:21.7549334(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 14:25:21,782 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:25:21,785 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:25:21,791 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 14:25:21.7848546(Timestamp), 2020-08-12 14:25:21.7848546(Timestamp)
2020-08-12 14:25:21,797 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:25:21,798 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:25:21,799 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:25:21,801 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,099 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:25:31,100 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:25:31,103 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,111 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:25:31,113 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:25:31,115 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,159 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:25:31,160 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:25:31,161 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,164 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:25:31,165 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:25:31,166 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,189 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:25:31,192 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812171384(String), false(Boolean)
2020-08-12 14:25:31,196 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,198 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:25:31,201 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812171384(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:26:01.1979769(Timestamp), null, null, null, 2020-08-12 14:25:31.1989741(Timestamp), 2020-08-12 14:25:31.1989741(Timestamp), false(Boolean)
2020-08-12 14:25:31,202 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:25:31,204 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:25:31,205 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:25:31,207 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,209 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:25:31,212 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812171384(String), false(Boolean)
2020-08-12 14:25:31,214 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,215 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split where id = ? 
2020-08-12 14:25:31,217 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 11(Integer)
2020-08-12 14:25:31,220 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:25:31,231 ERROR [http-nio-8080-exec-3] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] null
java.lang.NullPointerException: null
	at com.jindouyun.admin.service.AdminOrderService.merge(AdminOrderService.java:413)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$b5995c2.merge(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$fa07ba9c.merge(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.merge(AdminOrderController.java:150)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$92f123da.merge(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$f96b7194.merge(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:26:16,051 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 14:26:16,167 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:26:16,199 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 14:26:18,780 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:26:18,796 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:26:18,800 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:26:18.7882162(Timestamp), false(Boolean)
2020-08-12 14:26:18,802 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:26:18,826 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:26:18,828 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:26:18.8211096(Timestamp), false(Boolean)
2020-08-12 14:26:18,830 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:26:20,233 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 14:26:20,237 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 14:26:20,246 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:20,447 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 14:26:20,488 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 14:26:20.4433388(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 14:26:20.4433388(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 14:26:20,496 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:26:20,503 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:26:20,511 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 14:26:20.4981922(Timestamp), 2020-08-12 14:26:20.4991901(Timestamp)
2020-08-12 14:26:20,519 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:26:20,521 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:26:20,525 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:26:20,528 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,090 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:26:28,092 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:26:28,094 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,104 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:26:28,105 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:26:28,107 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,153 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:26:28,154 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:26:28,155 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,157 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:26:28,157 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:26:28,158 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,179 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:26:28,181 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812395806(String), false(Boolean)
2020-08-12 14:26:28,184 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,186 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:26:28,190 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812395806(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:26:58.1859208(Timestamp), null, null, null, 2020-08-12 14:26:28.1859208(Timestamp), 2020-08-12 14:26:28.1859208(Timestamp), false(Boolean)
2020-08-12 14:26:28,193 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:26:28,194 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:26:28,195 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:26:28,196 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,199 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:26:28,202 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812395806(String), false(Boolean)
2020-08-12 14:26:28,205 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,206 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split where id = ? 
2020-08-12 14:26:28,208 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 11(Integer)
2020-08-12 14:26:28,210 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:26:28,225 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_order_split SET merge_id = ?, update_time = ? WHERE ( id = ? ) 
2020-08-12 14:26:28,227 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 7(Integer), 2020-08-12 14:26:28.2128483(Timestamp), 11(Integer)
2020-08-12 14:26:28,228 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:26:28,238 ERROR [http-nio-8080-exec-2] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] null
java.lang.NullPointerException: null
	at com.jindouyun.admin.service.AdminOrderService.merge(AdminOrderService.java:416)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$fd6b484b.merge(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$ec196d25.merge(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.merge(AdminOrderController.java:150)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$494670ff.merge(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$afc0beb9.merge(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:27:15,636 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 14:27:15,757 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:27:15,792 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 14:27:18,387 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:27:18,411 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:27:18,417 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:27:18.3995533(Timestamp), false(Boolean)
2020-08-12 14:27:18,420 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:27:18,434 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:27:18,437 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:27:18.4284754(Timestamp), false(Boolean)
2020-08-12 14:27:18,438 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:27:19,955 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 14:27:19,958 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 14:27:19,968 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:27:20,109 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 14:27:20,137 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 169.254.18.154(String), 2020-08-12 14:27:20.1072815(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 14:27:20.1072815(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 14:27:20,144 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:27:20,148 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:27:20,155 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 169.254.18.154(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 14:27:20.1471771(Timestamp), 2020-08-12 14:27:20.1471771(Timestamp)
2020-08-12 14:27:20,161 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:27:20,163 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:27:20,166 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:27:20,168 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:27:32,731 ERROR [http-nio-8080-exec-2] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 43] Required Byte parameter 'type' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required Byte parameter 'type' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:202)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:113)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:28:18,441 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:28:18,442 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:28:18,443 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:28:18.4414862(Timestamp), false(Boolean)
2020-08-12 14:28:18,444 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:28:18,445 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:28:18,446 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:28:18.4453554(Timestamp), false(Boolean)
2020-08-12 14:28:18,447 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:28:25,951 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:28:25,953 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:28:25,955 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:25,962 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:28:25,964 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:28:25,965 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,011 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:28:26,012 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:28:26,013 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,015 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:28:26,016 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:28:26,018 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,040 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select count(*) from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) 
2020-08-12 14:28:26,042 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812576872(String), false(Boolean)
2020-08-12 14:28:26,044 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.countByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,045 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_merge_order (admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:28:26,049 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812576872(String), 测试(String), null, null, 1(Byte), 1(Byte), 0(Byte), 2020-08-12 14:28:56.0456247(Timestamp), null, null, null, 2020-08-12 14:28:26.0456247(Timestamp), 2020-08-12 14:28:26.0456247(Timestamp), false(Boolean)
2020-08-12 14:28:26,054 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:28:26,055 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:28:26,056 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:28:26,058 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.insert!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,060 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order WHERE ( admin_id = ? and order_sn = ? and deleted = ? ) limit 1 
2020-08-12 14:28:26,064 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 20200812576872(String), false(Boolean)
2020-08-12 14:28:26,066 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectOneByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,068 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split where id = ? 
2020-08-12 14:28:26,070 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 11(Integer)
2020-08-12 14:28:26,072 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,087 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_order_split SET merge_id = ?, update_time = ? WHERE ( id = ? ) 
2020-08-12 14:28:26,088 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer), 2020-08-12 14:28:26.0735841(Timestamp), 11(Integer)
2020-08-12 14:28:26,090 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:28:26,091 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split where id = ? 
2020-08-12 14:28:26,091 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 12(Integer)
2020-08-12 14:28:26,093 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:26,095 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_order_split SET merge_id = ?, update_time = ? WHERE ( id = ? ) 
2020-08-12 14:28:26,096 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer), 2020-08-12 14:28:26.0954915(Timestamp), 12(Integer)
2020-08-12 14:28:26,098 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:28:26,101 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_merge_order SET num = ?, all_price = ?, update_time = ? WHERE ( id = ? ) 
2020-08-12 14:28:26,103 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: 2(Short), 0(BigDecimal), 2020-08-12 14:28:26.098493(Timestamp), 8(Integer)
2020-08-12 14:28:26,105 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.updateByExampleSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:28:34,168 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:28:34,169 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:28:34,171 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,175 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:28:34,176 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:28:34,178 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,191 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:28:34,191 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:28:34,192 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,194 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:28:34,195 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:28:34,196 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,210 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 14:28:34,211 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:28:34,214 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 14:28:34,245 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id <> ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 14:28:34,247 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 14:28:34,248 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,250 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id <> ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 14:28:34,253 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 14:28:34,255 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 2
2020-08-12 14:28:34,258 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order where id = ? 
2020-08-12 14:28:34,259 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer)
2020-08-12 14:28:34,260 DEBUG [http-nio-8080-exec-4] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:28:34,264 ERROR [http-nio-8080-exec-4] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] null
java.lang.NullPointerException: null
	at com.jindouyun.admin.service.AdminOrderService.select(AdminOrderService.java:318)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$d8c60358.select(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$c7742832.select(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.list(AdminOrderController.java:131)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$cde31d4c.list(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$345d6b06.list(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:29:18,450 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:29:18,451 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:29:18,452 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:29:18.4500281(Timestamp), false(Boolean)
2020-08-12 14:29:18,452 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:29:18,453 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:29:18,453 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:29:18.4529986(Timestamp), false(Boolean)
2020-08-12 14:29:18,454 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:30:18,457 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:30:18,461 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:30:18,462 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:30:18.4571945(Timestamp), false(Boolean)
2020-08-12 14:30:18,463 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:30:18,464 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:30:18,464 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:30:18.4631719(Timestamp), false(Boolean)
2020-08-12 14:30:18,465 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:31:04,821 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, key_name, key_value, add_time, update_time, deleted from jindouyun_system WHERE ( deleted = ? ) 
2020-08-12 14:31:04,936 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:31:04,974 DEBUG [restartedMain] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 20
2020-08-12 14:31:07,658 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:31:07,676 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:31:07,680 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:31:07.6673649(Timestamp), false(Boolean)
2020-08-12 14:31:07,683 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:31:07,693 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:31:07,695 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:31:07.6893066(Timestamp), false(Boolean)
2020-08-12 14:31:07,697 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:31:09,271 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, username, `password`, last_login_ip, last_login_time, avatar, add_time, update_time, deleted, role_ids from jindouyun_admin WHERE ( username = ? and deleted = ? ) 
2020-08-12 14:31:09,273 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), false(Boolean)
2020-08-12 14:31:09,282 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:09,417 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_admin SET username = ?, `password` = ?, last_login_ip = ?, last_login_time = ?, avatar = ?, add_time = ?, update_time = ?, deleted = ?, role_ids = ? where id = ? 
2020-08-12 14:31:09,446 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), $2a$10$.rEfyBb/GURD9P2p0fRg/OAJGloGNDkJS4lY0cQHeqDgsbdTylBpu(String), 0:0:0:0:0:0:0:1(String), 2020-08-12 14:31:09.4146696(Timestamp), https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif(String), 2018-02-01 00:00:00.0(Timestamp), 2020-08-12 14:31:09.4146696(Timestamp), false(Boolean), [1](String), 1(Integer)
2020-08-12 14:31:09,453 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:31:09,457 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==>  Preparing: insert into jindouyun_log ( `admin`, ip, `type`, `action`, `status`, `result`, `comment`, add_time, update_time ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020-08-12 14:31:09,465 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] ==> Parameters: admin123(String), 0:0:0:0:0:0:0:1(String), 1(Integer), 登录(String), true(Boolean), (String), (String), 2020-08-12 14:31:09.4555288(Timestamp), 2020-08-12 14:31:09.4555288(Timestamp)
2020-08-12 14:31:09,471 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective [BaseJdbcLogger.java : 159] <==    Updates: 1
2020-08-12 14:31:09,473 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT LAST_INSERT_ID() 
2020-08-12 14:31:09,477 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] ==> Parameters: 
2020-08-12 14:31:09,480 DEBUG [http-nio-8080-exec-1] c.j.d.d.J.insertSelective!selectKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,685 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:31:20,686 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:31:20,688 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,697 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:31:20,699 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:31:20,700 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,758 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:31:20,759 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:31:20,762 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,764 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:31:20,765 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:31:20,766 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,789 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==>  Preparing: select id from jindouyun_order WHERE ( deleted = ? ) 
2020-08-12 14:31:20,790 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:31:20,792 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExampleSelective [BaseJdbcLogger.java : 159] <==      Total: 7
2020-08-12 14:31:20,831 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_order_split WHERE (brand_id <> ? AND order_id IN (?, ?, ?, ?, ?, ?, ?) AND deleted = ?) 
2020-08-12 14:31:20,833 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean)
2020-08-12 14:31:20,835 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,837 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, brand_id, order_id, merge_id, order_sn, order_status, consignee, mobile, building, address, message, goods_price, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_order_split WHERE ( brand_id <> ? and order_id in ( ? , ? , ? , ? , ? , ? , ? ) and deleted = ? ) order by add_time desc LIMIT ? 
2020-08-12 14:31:20,841 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Integer), 1(Integer), 5(Integer), 6(Integer), 7(Integer), 8(Integer), 9(Integer), 11(Integer), false(Boolean), 10(Integer)
2020-08-12 14:31:20,843 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 2
2020-08-12 14:31:20,851 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order where id = ? 
2020-08-12 14:31:20,852 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer)
2020-08-12 14:31:20,855 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:31:20,858 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order where id = ? 
2020-08-12 14:31:20,859 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer)
2020-08-12 14:31:20,861 DEBUG [http-nio-8080-exec-3] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:32:07,699 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:32:07,700 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:32:07,700 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:32:07.6991908(Timestamp), false(Boolean)
2020-08-12 14:32:07,701 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:32:07,703 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:32:07,704 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:32:07.7029634(Timestamp), false(Boolean)
2020-08-12 14:32:07,705 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:33:02,000 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:33:02,002 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:33:02,004 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:33:02,007 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:33:02,009 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:33:02,010 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:33:02,013 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:33:02,014 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:33:02,016 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:33:02,018 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:33:02,019 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:33:02,020 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:33:02,037 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT count(0) FROM jindouyun_express_order WHERE (deleted = ?) 
2020-08-12 14:33:02,038 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] ==> Parameters: false(Boolean)
2020-08-12 14:33:02,041 DEBUG [http-nio-8080-exec-6] c.j.d.d.J.selectByExampleSelective_COUNT [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:33:02,046 ERROR [http-nio-8080-exec-6] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 72] class java.util.HashMap$Values cannot be cast to class java.util.List (java.util.HashMap$Values and java.util.List are in module java.base of loader 'bootstrap')
java.lang.ClassCastException: class java.util.HashMap$Values cannot be cast to class java.util.List (java.util.HashMap$Values and java.util.List are in module java.base of loader 'bootstrap')
	at com.jindouyun.admin.service.AdminOrderService.select(AdminOrderService.java:361)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$3497d289.select(<generated>)
	at com.jindouyun.admin.service.AdminOrderService$$FastClassBySpringCGLIB$$98fec07a.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at com.jindouyun.admin.service.AdminOrderService$$EnhancerBySpringCGLIB$$2345f763.select(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController.list(AdminOrderController.java:131)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$e43295c3.list(<generated>)
	at com.jindouyun.admin.controller.AdminOrderController$$FastClassBySpringCGLIB$$f50d46ca.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.jindouyun.admin.controller.AdminOrderController$$EnhancerBySpringCGLIB$$4aace37d.list(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:33:07,708 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:33:07,709 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:33:07,709 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:33:07.7081597(Timestamp), false(Boolean)
2020-08-12 14:33:07,710 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:33:07,711 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:33:07,712 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:33:07.7111417(Timestamp), false(Boolean)
2020-08-12 14:33:07,713 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:34:07,714 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:34:07,718 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:34:07,719 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:34:07.7145516(Timestamp), false(Boolean)
2020-08-12 14:34:07,720 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:34:07,721 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:34:07,721 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:34:07.7205349(Timestamp), false(Boolean)
2020-08-12 14:34:07,723 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:35:07,724 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:35:07,728 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:35:07,729 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:35:07.7245028(Timestamp), false(Boolean)
2020-08-12 14:35:07,730 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:35:07,732 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:35:07,733 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:35:07.7314823(Timestamp), false(Boolean)
2020-08-12 14:35:07,734 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:36:07,736 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:36:07,738 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:36:07,739 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:36:07.7367985(Timestamp), false(Boolean)
2020-08-12 14:36:07,740 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:36:07,742 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:36:07,742 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:36:07.7417856(Timestamp), false(Boolean)
2020-08-12 14:36:07,743 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:37:07,746 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:37:07,748 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:37:07,749 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:37:07.7464261(Timestamp), false(Boolean)
2020-08-12 14:37:07,750 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:37:07,751 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:37:07,751 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:37:07.7502143(Timestamp), false(Boolean)
2020-08-12 14:37:07,752 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:38:07,753 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:38:07,755 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:38:07,756 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:38:07.7537706(Timestamp), false(Boolean)
2020-08-12 14:38:07,757 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:38:07,758 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:38:07,759 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:38:07.758747(Timestamp), false(Boolean)
2020-08-12 14:38:07,759 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:39:07,762 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:39:07,765 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:39:07,766 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:39:07.7624639(Timestamp), false(Boolean)
2020-08-12 14:39:07,767 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:39:07,768 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:39:07,768 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:39:07.7674509(Timestamp), false(Boolean)
2020-08-12 14:39:07,770 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:39:58,895 ERROR [http-nio-8080-exec-9] c.j.c.config.GlobalExceptionHandler [GlobalExceptionHandler.java : 43] Required Byte parameter 'type' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required Byte parameter 'type' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:202)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:113)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:836)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1747)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-08-12 14:40:07,771 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:40:07,774 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:40:07,774 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:40:07.771668(Timestamp), false(Boolean)
2020-08-12 14:40:07,775 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:40:07,776 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:40:07,777 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:40:07.7766548(Timestamp), false(Boolean)
2020-08-12 14:40:07,778 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:40:41,486 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:40:41,487 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:40:41,488 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:40:41,490 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:40:41,491 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:40:41,493 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:40:41,495 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:40:41,496 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:40:41,497 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:40:41,498 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:40:41,499 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:40:41,500 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:40:41,503 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order where id = ? 
2020-08-12 14:40:41,504 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer)
2020-08-12 14:40:41,506 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:40:41,509 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_merge_order SET admin_id = ?, `release` = ?, update_time = ? where id = ? 
2020-08-12 14:40:41,511 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 1(Byte), 2020-08-12 14:40:41.5082177(Timestamp), null
2020-08-12 14:40:41,515 DEBUG [http-nio-8080-exec-10] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 0
2020-08-12 14:41:07,780 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:41:07,781 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:41:07,781 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:41:07.7808107(Timestamp), false(Boolean)
2020-08-12 14:41:07,783 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:41:07,785 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:41:07,786 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:41:07.7845888(Timestamp), false(Boolean)
2020-08-12 14:41:07,788 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:41:24,125 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:41:24,126 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:41:24,128 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:41:24,129 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:41:24,130 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:41:24,131 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:41:24,134 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, enabled, add_time, update_time, deleted from jindouyun_role WHERE ( id in ( ? ) and enabled = ? and deleted = ? ) 
2020-08-12 14:41:24,135 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), true(Boolean), false(Boolean)
2020-08-12 14:41:24,137 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:41:24,140 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, role_id, permission, add_time, update_time, deleted from jindouyun_permission WHERE ( role_id in ( ? ) and deleted = ? ) 
2020-08-12 14:41:24,140 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), false(Boolean)
2020-08-12 14:41:24,142 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:41:24,143 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==>  Preparing: select id, admin_id, order_sn, message, num, all_price, `type`, `release`, `status`, release_time, receive_time, pickup_time, arrive_time, add_time, update_time, deleted from jindouyun_merge_order where id = ? 
2020-08-12 14:41:24,144 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] ==> Parameters: 8(Integer)
2020-08-12 14:41:24,145 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.selectByPrimaryKey [BaseJdbcLogger.java : 159] <==      Total: 1
2020-08-12 14:41:24,147 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==>  Preparing: update jindouyun_merge_order SET admin_id = ?, `release` = ?, update_time = ? where id = ? 
2020-08-12 14:41:24,148 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] ==> Parameters: 1(Integer), 1(Byte), 2020-08-12 14:41:24.1465761(Timestamp), null
2020-08-12 14:41:24,149 DEBUG [http-nio-8080-exec-2] c.j.d.d.J.updateByPrimaryKeySelective [BaseJdbcLogger.java : 159] <==    Updates: 0
2020-08-12 14:42:07,789 INFO [scheduling-1] com.jindouyun.admin.job.CouponJob [CouponJob.java : 36] 系统开启任务检查优惠券是否已经过期
2020-08-12 14:42:07,789 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, `name`, `desc`, total, discount, `min`, `limit`, `type`, `status`, goods_type, goods_value, time_type, `days`, start_time, end_time, add_time, update_time, deleted from jindouyun_coupon WHERE ( `status` = ? and time_type = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:42:07,790 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 1(Short), 2020-08-12 14:42:07.7898036(Timestamp), false(Boolean)
2020-08-12 14:42:07,791 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
2020-08-12 14:42:07,793 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==>  Preparing: select id, user_id, coupon_id, `status`, used_time, start_time, end_time, order_id, add_time, update_time, deleted from jindouyun_coupon_user WHERE ( `status` = ? and end_time < ? and deleted = ? ) 
2020-08-12 14:42:07,793 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] ==> Parameters: 0(Short), 2020-08-12 14:42:07.7927969(Timestamp), false(Boolean)
2020-08-12 14:42:07,794 DEBUG [scheduling-1] c.j.d.d.J.selectByExample [BaseJdbcLogger.java : 159] <==      Total: 0
